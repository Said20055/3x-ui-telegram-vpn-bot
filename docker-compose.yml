services:
  nginx:
    container_name: vpn_bot_nginx
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "8443:443"
    networks:
      - vpn_bot
    restart: always
    environment:
      DOMAIN: ${DOMAIN}
      LOCATION: ${SERVER_URL}
      CERT_FULLCHAIN_PATH: "/etc/nginx/certs/fullchain.pem"
      CERT_KEY_PATH: "/etc/nginx/certs/privkey.pem"
    volumes:
      - ./etc/nginx/templates:/etc/nginx/templates:ro
      - ./etc/nginx/conf:/etc/nginx/conf.d
      - ./etc/nginx/static:/usr/share/nginx/html:ro
      - ${CERT_FULLCHAIN_PATH}:/etc/nginx/certs/fullchain.pem
      - ${CERT_KEY_PATH}:/etc/nginx/certs/privkey.pem
      - ./certbot/data:/var/www/certbot
  postgres:
    image: postgres:15-alpine  # Используем официальный и легкий образ
    container_name: vpn_bot_postgres
    restart: always
    environment:
      # Эти переменные Docker использует для создания БД и пользователя при первом запуске
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      # Эта строка сохраняет все данные вашей БД в именованный том,
      # чтобы они не пропали при остановке контейнера
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - vpn_bot 
  xui:
    image: ghcr.io/mhsanaei/3x-ui:latest # Используем актуальный образ
    container_name: vpn_bot_xui
    restart: always
    networks:
      - vpn_bot 
    volumes:
      - xui_db:/etc/x-ui/          # Для хранения базы данных панели
      - xui_certs:/root/cert/      # Для хранения SSL сертификатов, если понадобятся
    ports:
      - "127.0.0.1:54321:2053" # Порт для доступа к веб-интерфейсу панели (можете поменять)
      - "443:443"     # Порт для VPN-протоколов (VLESS/VMess и т.д.)
  vpn_bot:
    image: vpn_bot
    ports:
      - "8081:8081"
    container_name: vpn_bot
    stop_signal: SIGINT
    build:
      context: .
    working_dir: "/usr/src/app"
    volumes:
      - .:/usr/src/app
    command: python3 -m bot
    restart: always
    env_file:
      - ".env"
    networks:
      - vpn_bot
    depends_on:
      - xui
networks:
  vpn_bot:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  xui_db:
    driver: local
  xui_certs:
    driver: local